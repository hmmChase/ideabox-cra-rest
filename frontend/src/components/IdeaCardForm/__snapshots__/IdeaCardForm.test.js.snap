// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`IdeaCardForm matches the snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <IdeaCardForm
    dispatchAddIdea={[MockFunction]}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <input
          className="IdeaCardInput"
          name="idea"
          onChange={[Function]}
          placeholder="Enter idea"
          type="text"
          value=""
        />,
        <button
          disabled={true}
          type="submit"
        >
          Add idea
        </button>,
      ],
      "className": "IdeaCardForm",
      "onSubmit": [Function],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "className": "IdeaCardInput",
          "name": "idea",
          "onChange": [Function],
          "placeholder": "Enter idea",
          "type": "text",
          "value": "",
        },
        "ref": null,
        "rendered": null,
        "type": "input",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "Add idea",
          "disabled": true,
          "type": "submit",
        },
        "ref": null,
        "rendered": "Add idea",
        "type": "button",
      },
    ],
    "type": "form",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <input
            className="IdeaCardInput"
            name="idea"
            onChange={[Function]}
            placeholder="Enter idea"
            type="text"
            value=""
          />,
          <button
            disabled={true}
            type="submit"
          >
            Add idea
          </button>,
        ],
        "className": "IdeaCardForm",
        "onSubmit": [Function],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "className": "IdeaCardInput",
            "name": "idea",
            "onChange": [Function],
            "placeholder": "Enter idea",
            "type": "text",
            "value": "",
          },
          "ref": null,
          "rendered": null,
          "type": "input",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Add idea",
            "disabled": true,
            "type": "submit",
          },
          "ref": null,
          "rendered": "Add idea",
          "type": "button",
        },
      ],
      "type": "form",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    "disableLifecycleMethods": true,
  },
}
`;

exports[`IdeaCardForm matches the snapshot with idea 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <IdeaCardForm
    dispatchAddIdea={[MockFunction]}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <input
          className="IdeaCardInput"
          name="idea"
          onChange={[Function]}
          placeholder="Enter idea"
          type="text"
          value="mock idea"
        />,
        <button
          disabled={true}
          type="submit"
        >
          Add idea
        </button>,
      ],
      "className": "IdeaCardForm",
      "onSubmit": [Function],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "className": "IdeaCardInput",
          "name": "idea",
          "onChange": [Function],
          "placeholder": "Enter idea",
          "type": "text",
          "value": "mock idea",
        },
        "ref": null,
        "rendered": null,
        "type": "input",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "Add idea",
          "disabled": true,
          "type": "submit",
        },
        "ref": null,
        "rendered": "Add idea",
        "type": "button",
      },
    ],
    "type": "form",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <input
            className="IdeaCardInput"
            name="idea"
            onChange={[Function]}
            placeholder="Enter idea"
            type="text"
            value="mock idea"
          />,
          <button
            disabled={true}
            type="submit"
          >
            Add idea
          </button>,
        ],
        "className": "IdeaCardForm",
        "onSubmit": [Function],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "className": "IdeaCardInput",
            "name": "idea",
            "onChange": [Function],
            "placeholder": "Enter idea",
            "type": "text",
            "value": "mock idea",
          },
          "ref": null,
          "rendered": null,
          "type": "input",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Add idea",
            "disabled": true,
            "type": "submit",
          },
          "ref": null,
          "rendered": "Add idea",
          "type": "button",
        },
      ],
      "type": "form",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    "disableLifecycleMethods": true,
  },
}
`;

exports[`IdeaCardForm matches the snapshot with isSubmitDisabled: false 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <IdeaCardForm
    dispatchAddIdea={[MockFunction]}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <input
          className="IdeaCardInput"
          name="idea"
          onChange={[Function]}
          placeholder="Enter idea"
          type="text"
          value=""
        />,
        <button
          disabled={false}
          type="submit"
        >
          Add idea
        </button>,
      ],
      "className": "IdeaCardForm",
      "onSubmit": [Function],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "className": "IdeaCardInput",
          "name": "idea",
          "onChange": [Function],
          "placeholder": "Enter idea",
          "type": "text",
          "value": "",
        },
        "ref": null,
        "rendered": null,
        "type": "input",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "Add idea",
          "disabled": false,
          "type": "submit",
        },
        "ref": null,
        "rendered": "Add idea",
        "type": "button",
      },
    ],
    "type": "form",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <input
            className="IdeaCardInput"
            name="idea"
            onChange={[Function]}
            placeholder="Enter idea"
            type="text"
            value=""
          />,
          <button
            disabled={false}
            type="submit"
          >
            Add idea
          </button>,
        ],
        "className": "IdeaCardForm",
        "onSubmit": [Function],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "className": "IdeaCardInput",
            "name": "idea",
            "onChange": [Function],
            "placeholder": "Enter idea",
            "type": "text",
            "value": "",
          },
          "ref": null,
          "rendered": null,
          "type": "input",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Add idea",
            "disabled": false,
            "type": "submit",
          },
          "ref": null,
          "rendered": "Add idea",
          "type": "button",
        },
      ],
      "type": "form",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    "disableLifecycleMethods": true,
  },
}
`;
